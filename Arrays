import java.util.*;
class Array{
  public static void travers(int a[]){
    for(int i=0;i<a.length;i++){
      System.out.print(a[i]+" ");
    }
  }
  public static void reverse(int a[],int left,int right){
    while(left<right){
      int temp = a[left];
      a[left] = a[right];
      a[right]=temp;
      left++;
      right--;
    }
    /*for(int i=0;i<a.length;i++){
      System.out.print(a[i]+" ");
    }*/
  }
  public static void rightRotate(int a[],int k){
    int n =a.length;
    reverse(a, 0, n-k-1);
    reverse(a, n-k, n-1);
    reverse(a, 0, n-1);
    for(int i =0; i<a.length;i++){
      System.out.print(a[i]+" ");
    }
  }
  public static void leftRotate(int a[],int k) {
    int n =a.length;
    reverse(a,0,k-1);
    reverse(a,k,n-1);
    reverse(a, 0, n-1);
    for(int i =0; i<a.length;i++){
      System.out.print(a[i]+" ");
    }
  }
  public static void uniqueElement(int a[]) {
    int xor=a[0];
    for(int i=1;i<a.length;i++){
      xor=xor^a[i];
    }
    System.out.println("unique element :"+xor);
  }
  public static void missingValue(int a[]) {
    int xor2=a.length;
    for(int i=0;i<a.length;i++){
      xor2=xor2^a[i]^i;
    }
    System.out.print("missing value:"+xor2);
  }
  public static void buyingSellingStock(int a[]){
    int buying=Integer.MAX_VALUE;
    int profit=0;
    for(int i=0;i<a.length;i++){
      buying=Math.min(a[i],buying);
      profit=Math.max(profit,a[i]-buying);
    }
    System.out.println("Profit :"+profit);
  }
  public static void dutchFlag(int a[]){
    int mid=0;
    int high=a.length-1;
    int low=0;
    while(mid<=high){
      if(a[mid]==0){
        int temp=a[low];
        a[low]=a[mid];
        a[mid]=temp;
        mid++;
        low++;
      }
      else if (a[mid]==1){
        mid++;
      }
      else{
        int temp=a[mid];
        a[mid]=a[high];
        a[high]=temp;
        high--;
      }
    }
    for(int i =0; i<a.length;i++){
      System.out.print(a[i]+" ");
    }
  }
  public static void majorityElement(int a[]){
    int max=-1;
    int vote=0;
    for(int i=0;i<a.length;i++){
      if(vote==0){
        max=a[i];
        vote++;
      }
      else if (max==a[i]){
        vote++;
      }
      else{
        vote--;
      }
    }
    int count=0;
    for(int i=0;i<a.length;i++){
      if(a[i]==max) count++;
      }
    int n=a.length;
    if(count>(n/2)) System.out.println("max:"+max);
    else System.out.println("-1");
    }
    public static void zeroMoves(int a[]){
      int left=0;
      int right=0;
      while(right<a.length){
        if(a[right]!=0){
          int temp=a[left];
          a[left]=a[right];
          a[right]=temp;
          left++;
        }
        right++;
      }
      for(int i=0;i<a.length;i++){
        System.out.print(a[i]+" ");
      }
    }
    public static void removeDuplicates(int a[]) {
      int left=0;
      int right=1;
      while(right<a.length){
        if(a[right]!=a[left]){
          left++;
          int temp=a[left];
          a[left]=a[right];
          a[right]=temp;
        }
        right++;
      }
      for(int i=0;i<=left;i++){
        System.out.print(a[i]+" ");
      }
    }
    public static void maxSubArray(int a[]) {
      int sum = 0;
      int max=Integer.MIN_VALUE;
      for(int i=0;i<a.length;i++){
        sum+=a[i];
        if(sum>max) sum=max;
        if(sum<0) sum=0;
      }
      System.out.println("Max_sub_Array_sum :"+max);
    }
    public static void bubbleSort(int a[]) {
      for(int i=0;i<a.length;i++){
        for(int j=0;j<a.length-1-i;j++){
          if(a[i]<a[j]){
            int temp=a[i];
            a[i]=a[j];
            a[j]=temp;
          }
        }
      }
      for(int i=0;i<a.length;i++){
        System.out.print(a[i]+" ");
      }
    }
    public static void selectionSort(int a[]){
      for(int i=0;i<a.length-1;i++){
        int minpos=i;
        for(int j=i+1;j<a.length;j++)
          if(a[minpos]>a[j])
            minpos=j;
          int temp=a[minpos];
          a[minpos]=a[i];
          a[i]=temp;
        }
        for(int i=0;i<a.length;i++){
          System.out.print(a[i]+" ");
        }
      }
      public static void insertionSort(int a[]) {
        for(int i=0;i<a.length;i++){
          int j=i+1;
          while(j>0){
            if(a[j-1]>a[j]){
              int temp=a[j];
              a[j]=a[j-1];
              a[j-1]=temp;
              j--;
            }
          }
        }
        for(int i=0;i<a.length;i++){
          System.out.print(a[i]+" ");
        }
      }
  public static void main(String args[]){
    int a[]={2,0,1};
    //travers(a);
    //reverse(a,0,a.length-1);
    //rightRotate(a,3);
    //leftRotate(a,3);
    //uniqueElement(a);
    //missingValue(a);
    //buyingSellingStock(a);
    dutchFlag(a);
    //majorityElement(a);  //boye moyer voting algorithm
    //zeroMoves(a);
    //removeDuplicates(a);
    //maxSubArray(a);  //kadanes Algorithm
    //bubbleSort(a);
    //selectionSort(a); 
    // insertionSort(a);
    //twosum(); pending
  }
}
